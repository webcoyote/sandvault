#!/usr/bin/env bash
set -Eeuo pipefail
trap 'echo "${BASH_SOURCE[0]}: line $LINENO: $BASH_COMMAND: exitcode $?"' ERR
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
WORKSPACE="$(realpath "$SCRIPT_DIR/..")"
cd "$WORKSPACE"

# Find files in workspace
# ... with no filename extension or a .sh extension
# ... that have shell shebang (sh/bash/zsh/ksh)
# ... and run shellcheck on them
#
# Disable warnings:
# - SC1017 => Literal carriage return (ignore Windows line endings)
#
# fd regex pattern matches:
#   ^[^.]+$ - files with no dots (no extension)
#   \.sh$   - files ending with .sh
#
# awk pattern matches only the first line that starts with '#!'
# and ends with 'sh'

[[ "${VERBOSE:-0}" =~ ^[0-9]+$ ]] && VERBOSE="${VERBOSE:-0}" || VERBOSE=1

trace () {
    [[ "$VERBOSE" -lt 2 ]] || echo >&2 -e "üî¨ \033[90m$*\033[0m"
}
debug () {
    [[ "$VERBOSE" -lt 1 ]] || echo >&2 -e "üîç \033[36m$*\033[0m"
}

RESULT=0
while IFS= read -r -d '' file; do
    # Ignore files that don't have shell-script shebang: "#!...sh"
    if ! awk 'NR==1 && /^#!/ && /sh$/{exit 0} {exit 1}' "$file" ; then
        trace "Skipping $file (not shell script)"
        continue
    fi

    debug "Checking $file"
    if ! shellcheck --check-sourced --external-sources --exclude SC1017 "$file" ; then
        RESULT=1
    fi
done < <(fd --hidden -t f '(^[^.]+$|\.sh$)' --exclude '.git' -0)

exit $RESULT
